import type { Metadata } from 'next';
import localFont from 'next/font/local';
import { ThemeProvider } from 'next-themes';
import Link from 'next/link';

import './globals.css';

const geistSans = localFont({
  src: './fonts/GeistVF.woff',
  variable: '--font-geist-sans',
  weight: '100 900',
});

const geistMono = localFont({
  src: './fonts/GeistMonoVF.woff',
  variable: '--font-geist-mono',
  weight: '100 900',
});

export const metadata: Metadata = {
  title: 'Create Next App',
  description: 'Generated by create next app',
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning={true}>
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased h-screen flex`}
        suppressHydrationWarning={true}
      >
        <ThemeProvider attribute="class" defaultTheme="light">
          {children}

          {/* 全局悬浮菜单 - 右上角 */}
          <div className="fixed right-6 top-6 flex gap-3 z-50">
            <Link
              href="/"
              className="group flex items-center gap-2.5 bg-white/5 hover:bg-white/10 backdrop-blur-xl px-4 py-2.5 rounded-xl border border-white/10 transition-all hover:scale-105 active:scale-95 shadow-xl shadow-black/5"
            >
              <svg
                className="w-[18px] h-[18px] text-gray-300 group-hover:text-blue-400 transition-colors"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={2}
                  d="M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10"
                />
              </svg>
              <span className="text-sm text-gray-300 group-hover:text-blue-400 font-medium transition-colors">
                切割
              </span>
            </Link>
            <Link
              href="/transition"
              className="group flex items-center gap-2.5 bg-white/5 hover:bg-white/10 backdrop-blur-xl px-4 py-2.5 rounded-xl border border-white/10 transition-all hover:scale-105 active:scale-95 shadow-xl shadow-black/5"
            >
              <svg
                className="w-[18px] h-[18px] text-gray-300 group-hover:text-blue-400 transition-colors"
                fill="none"
                stroke="currentColor"
                viewBox="0 0 24 24"
              >
                <path
                  strokeLinecap="round"
                  strokeLinejoin="round"
                  strokeWidth={2}
                  d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15"
                />
              </svg>
              <span className="text-sm text-gray-300 group-hover:text-blue-400 font-medium transition-colors">
                转换
              </span>
            </Link>
          </div>
        </ThemeProvider>
      </body>
    </html>
  );
}
